"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventQueues = void 0;
const events_1 = require("@serenity-js/core/lib/events");
const EventQueue_1 = require("./EventQueue");
/**
 * @package
 */
class EventQueues {
    constructor() {
        this.queueIndex = [];
        this.queues = new Map();
        this.holdingBay = new EventQueue_1.EventQueue();
    }
    enqueue(event) {
        if (this.shouldStartNewQueueFor(event)) {
            this.queues.set(this.queueIdFor(event), new EventQueue_1.EventQueue(event, ...this.holdingBay.drain()));
        }
        else if (this.hasNoQueuesReadyFor(event)) {
            this.holdingBay.enqueue(event);
        }
        else {
            this.queues.get(this.queueIdFor(event)).enqueue(event);
        }
    }
    forEach(callback) {
        this.queues.forEach(callback);
    }
    shouldStartNewQueueFor(event) {
        return (event instanceof events_1.SceneSequenceDetected || event instanceof events_1.SceneStarts)
            && !this.queues.has(this.queueIdFor(event));
    }
    hasNoQueuesReadyFor(event) {
        return this.queues.size === 0
            || !this.queues.has(this.queueIdFor(event));
    }
    queueIdFor(event) {
        const exactMatch = this.queueIndex.find(entry => entry.sceneId.equals(event.sceneId));
        if (exactMatch) {
            return exactMatch.queueId;
        }
        const sameScenarioMatch = this.queueIndex.find(entry => entry.details.equals(event.details));
        if (sameScenarioMatch) {
            this.queueIndex.push({
                sceneId: event.sceneId,
                details: event.details || sameScenarioMatch.details,
                queueId: sameScenarioMatch.queueId,
            });
            return sameScenarioMatch.queueId;
        }
        const newQueueId = Symbol();
        this.queueIndex.push({
            sceneId: event.sceneId,
            details: event.details,
            queueId: newQueueId,
        });
        return newQueueId;
    }
}
exports.EventQueues = EventQueues;
//# sourceMappingURL=EventQueues.js.map