import { AnswersQuestions, PerformsActivities, Question, Task, UsesAbilities } from '@serenity-js/core';
import { Path } from '@serenity-js/core/lib/io';
/**
 * @package
 */
export declare class InvokeSerenityBDD extends Task {
    private readonly pathToArtifact;
    private readonly args;
    private readonly props;
    static at(pathToArtifact: Path): InvokeSerenityBDD;
    withArguments(args: Question<string[]>): InvokeSerenityBDD;
    withProperties(properties: Question<string[]>): InvokeSerenityBDD;
    constructor(pathToArtifact: Path, args?: Question<string[]>, props?: Question<string[]>);
    /**
     * @desc
     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}
     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.
     *
     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor
     * @returns {Promise<void>}
     *
     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}
     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}
     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}
     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}
     */
    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any>;
    /**
     * @desc
     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.
     *
     * @returns {string}
     */
    toString(): string;
}
