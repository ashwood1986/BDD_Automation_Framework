/// <reference types="node" />
import { AnswersQuestions, PerformsActivities, Task, UsesAbilities } from '@serenity-js/core';
import { Path } from '@serenity-js/core/lib/io';
import { URL } from 'url';
import { GAV } from '../../model';
/**
 * @package
 */
export declare class DownloadArtifact extends Task {
    private readonly gav;
    private readonly repository;
    private readonly destinationDirectory;
    static identifiedBy(artifactIdentifier: GAV): {
        availableFrom: (repository: URL) => {
            to: (destinationDirectory: Path) => DownloadArtifact;
        };
    };
    constructor(gav: GAV, repository: URL, destinationDirectory: Path);
    /**
     * @desc
     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}
     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.
     *
     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor
     * @returns {Promise<void>}
     *
     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}
     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}
     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}
     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}
     */
    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any>;
    /**
     * @desc
     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.
     *
     * @returns {string}
     */
    toString(): string;
    private artifactUrl;
}
