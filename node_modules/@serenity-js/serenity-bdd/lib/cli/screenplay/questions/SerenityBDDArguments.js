"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SerenityBDDArguments = void 0;
const core_1 = require("@serenity-js/core");
/**
 * @package
 */
class SerenityBDDArguments extends core_1.Question {
    constructor(argv) {
        super('Serenity BDD arguments');
        this.argv = argv;
    }
    static from(argv) {
        return new SerenityBDDArguments(argv);
    }
    answeredBy(actor) {
        return flatten(Object.keys(this.argv)
            .filter(key => !!~SerenityBDDArguments.Allowed.indexOf(key) && !!this.argv[key])
            .map(arg => [`--${arg}`, this.argv[arg]]));
    }
}
exports.SerenityBDDArguments = SerenityBDDArguments;
SerenityBDDArguments.Allowed = [
    'destination',
    'features',
    'issueTrackerUrl',
    'jiraProject',
    'jiraUrl',
    'project',
    'source',
];
function flatten(list) {
    return list.reduce((acc, current) => {
        Array.isArray(current)
            ? acc.push(...flatten(current))
            : acc.push(current);
        return acc;
    }, []);
}
//# sourceMappingURL=SerenityBDDArguments.js.map