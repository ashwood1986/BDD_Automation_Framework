"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtractorModalDialog = void 0;
const web_1 = require("@serenity-js/web");
const selenium_webdriver_1 = require("selenium-webdriver");
const promised_1 = require("../promised");
class ProtractorModalDialog extends web_1.ModalDialog {
    constructor(browser) {
        super();
        this.browser = browser;
    }
    accept() {
        return (0, promised_1.promised)(this.browser.switchTo().alert().accept());
    }
    dismiss() {
        return (0, promised_1.promised)(this.browser.switchTo().alert().dismiss());
    }
    text() {
        return (0, promised_1.promised)(this.browser.switchTo().alert().getText());
    }
    async enterValue(value) {
        const text = [].concat(value).join('');
        await (0, promised_1.promised)(this.browser.switchTo().alert().sendKeys(text));
        await (0, promised_1.promised)(this.browser.switchTo().alert().accept());
    }
    // todo: remove in favour of auto-wait in the above methods
    isPresent() {
        return (0, promised_1.promised)(this.browser.switchTo().alert())
            .then(() => true, error => {
            // Based on:
            // https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/javascript/node/selenium-webdriver/lib/until.js#L107
            return error instanceof Error &&
                !(error.name === selenium_webdriver_1.error.NoSuchAlertError.name
                    // XXX: Workaround for GeckoDriver error `TypeError: can't convert null
                    // to object`. For more details, see
                    // https://github.com/SeleniumHQ/selenium/pull/2137
                    || (error.name === selenium_webdriver_1.error.WebDriverError.name
                        && error.message === `can't convert null to object`));
        });
    }
}
exports.ProtractorModalDialog = ProtractorModalDialog;
//# sourceMappingURL=ProtractorModalDialog.js.map