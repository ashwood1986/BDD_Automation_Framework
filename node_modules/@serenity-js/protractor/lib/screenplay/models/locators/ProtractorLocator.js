"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProtractorLocator = void 0;
const web_1 = require("@serenity-js/web");
const unpromisedWebElement_1 = require("../../unpromisedWebElement");
const ProtractorPageElement_1 = require("../ProtractorPageElement");
class ProtractorLocator extends web_1.Locator {
    static createRootLocator(browser, selector, protractorBy) {
        const parentRoot = {
            element: browser.element.bind(browser),
            all: browser.element.all.bind(browser),
        };
        return new ProtractorLocator(() => parentRoot, selector, (root) => (0, unpromisedWebElement_1.unpromisedWebElement)(root.element(protractorBy)), async (root) => root.all(protractorBy));
    }
    of(parent) {
        return new ProtractorLocator(() => parent.nativeElement(), this.selector, (parentRoot) => this.locateElement(parentRoot), (parentRoot) => this.locateAllElements(parentRoot));
    }
    element() {
        return new ProtractorPageElement_1.ProtractorPageElement(this);
    }
    async allElements() {
        const parentRoot = await this.parentRoot();
        const elements = await this.locateAllElements(parentRoot);
        return Promise.all(elements.map(childElement => new ProtractorPageElement_1.ProtractorPageElement(new ProtractorLocator(this.parentRoot, this.selector, () => (0, unpromisedWebElement_1.unpromisedWebElement)(childElement), () => [(0, unpromisedWebElement_1.unpromisedWebElement)(childElement)]))));
    }
}
exports.ProtractorLocator = ProtractorLocator;
//# sourceMappingURL=ProtractorLocator.js.map